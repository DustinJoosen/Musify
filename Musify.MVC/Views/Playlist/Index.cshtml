@model IEnumerable<(PlaylistViewModel playlist, int duration)>

@{
    ViewData["Title"] = "Playlists";
}

<h1>Playlists</h1>

<p>
    <a asp-action="Create" style="color: wheat;">Add</a>
</p>
<table class="table table-sm" style="color: white;">
    <thead>
        <tr>
            <th>
                Actions
            </th>
            <th>
                @Html.DisplayNameFor(model => model.playlist.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.playlist.Username)
            </th>
            <th>
                Duration
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var (item, duration) in Model) {
        <tr class="min-width;">
            <td style="display: flex;">
				<button class="playlistlikebtn @(item.Liked ? "liked" : "")" playlistid="@item.Id"><i class="fa-solid fa-heart"></i></button>
				<button style="margin-left: 0.2rem;" class="btn btn-warning addQueue" songname="@string.Join(',', item.Songs.Select(s => s.Title))">Play</button>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Username)
            </td>
            <td>
                    @{
                        var currentDuration = duration.ToString();
                        if(currentDuration.Length >= 2)
                        {
                            currentDuration = currentDuration.Insert(currentDuration.Length-2, ":");
                        }
                    }
                    @currentDuration
            </td>
            <td >
                    <a asp-action="Edit" asp-route-id="@item.Id" style="color: wheat;">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" style="color: wheat;">Delete</a> |
                    <a asp-action="Songs" asp-route-id="@item.Id" style="color: wheat;">Manage Playlist</a>
            </td>
        </tr>
}
    </tbody>
</table>
